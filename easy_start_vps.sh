#!/bin/bash
# ==============================================================
# –ê–≤—Ç–æ—Ä: Funnnik
# –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: Ubuntu 22.04 / 24.04+
# –í–µ—Ä—Å–∏—è: 1.2
# ==============================================================

set -e

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ ---
if [ "$EUID" -ne 0 ]; then
  echo "‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –æ—Ç root. –ò—Å–ø–æ–ª—å–∑—É–π: sudo bash $0"
  exit 1
fi

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å–µ—Ä–≤–µ—Ä–∞..."

# --- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã ---
echo "üì¶ –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞–∫–µ—Ç–æ–≤..."
apt list --upgradable || true
sleep 3

echo "üì¶ –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É..."
apt update && apt upgrade -y
apt autoclean && apt autoremove -y
apt install -y curl ufw fail2ban htop
snap install speedtest

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UFW ---
echo "üß± –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º UFW (—Ñ–∞–µ—Ä–≤–æ–ª)..."
ufw --force reset
ufw default deny incoming
ufw default allow outgoing

# –†–∞–∑—Ä–µ—à–∞–µ–º SSH —Ç–æ–ª—å–∫–æ —Å –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ø–æ–¥—Å–µ—Ç–µ–π
ufw allow from 62.105.44.145/29 to any port ssh
ufw allow from 188.0.160.0/19 to any port ssh

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ICMP (ping) ---
echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º ICMP (ping) –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è..."
UFW_RULES="/etc/ufw/before.rules"
if grep -q "# ok icmp codes for INPUT" "$UFW_RULES"; then
  if ! grep -q "Custom ICMP filtering" "$UFW_RULES"; then
    sed -i '/# ok icmp codes for INPUT/a \
# --- Custom ICMP filtering ---\n\
-A ufw-before-input -p icmp --icmp-type echo-request -s 62.105.44.145/29 -j ACCEPT\n\
-A ufw-before-input -p icmp --icmp-type echo-request -s 188.0.160.0/19 -j ACCEPT\n\
-A ufw-before-input -p icmp --icmp-type echo-request -j DROP\n\
# --- End custom ICMP filtering ---' "$UFW_RULES"
  fi
fi

ufw logging on
ufw --force enable

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ DNS over HTTPS ---
echo "üåê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º DNS over HTTPS (DoH)..."
RESOLVED_CONF="/etc/systemd/resolved.conf"
cat <<EOF > "$RESOLVED_CONF"
[Resolve]
DNS=1.1.1.1#cloudflare-dns.com 8.8.8.8#dns.google
DNSOverTLS=yes
EOF

systemctl daemon-reload
systemctl restart systemd-resolved
systemctl enable systemd-resolved

# --- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker ---
if ! command -v docker &> /dev/null; then
  echo "üê≥ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
  curl -fsSL https://get.docker.com | sh
  usermod -aG docker $SUDO_USER || true
else
  echo "‚úÖ Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É."
  docker --version
fi

# --- –°–µ—Ç–µ–≤—ã–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏ BBR ---
echo "‚ö° –ü—Ä–∏–º–µ–Ω—è–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é —Å–µ—Ç–∏ (VPN tuning)..."
tee /etc/sysctl.d/99-vpn-tuning.conf <<'EOF'
net.ipv4.ip_forward = 1
net.ipv6.conf.all.forwarding = 1
net.ipv4.tcp_congestion_control = bbr
net.core.default_qdisc = fq
net.core.rmem_max = 2500000
net.core.wmem_max = 2500000
net.ipv4.tcp_rmem = 4096 87380 2500000
net.ipv4.tcp_wmem = 4096 65536 2500000
net.ipv4.tcp_fastopen = 3
EOF

sysctl --system

# --- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Fail2Ban ---
echo "üîê –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Fail2Ban..."
apt install -y fail2ban
systemctl enable fail2ban
systemctl start fail2ban

# --- –°–º–µ–Ω–∞ Hostname –Ω–∞ localhost ---
echo "‚öôÔ∏è –ú–µ–Ω—è–µ–º –∏–º—è –Ω–∞ localhost..."
cp /etc/hosts /etc/hosts.backup
hostnamectl set-hostname localhost
tee /etc/hosts > /dev/null <<EOF
127.0.0.1   localhost
127.0.1.1   localhost
EOF

echo "‚úÖ –ì–æ—Ç–æ–≤–æ! Hostname: $(hostname)"
echo "‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—å PTR!"
echo "‚ö†Ô∏è –ë—ç–∫–∞–ø: /etc/hosts.backup"

# --- –§–∏–Ω–∞–ª ---
echo ""
echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"

# --- –ó–∞–ø—Ä–æ—Å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ ---
echo
read -r -p "üîÅ –í—ã–ø–æ–ª–Ω–∏—Ç—å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É —Å–µ–π—á–∞—Å? [y/N]: " REBOOT_ANSWER < /dev/tty

case "$REBOOT_ANSWER" in
    [yY][eE][sS]|[yY])
        echo "üîÅ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—é—Å—å..."
        sleep 2
        reboot
        ;;
    *)
        echo "‚ö†Ô∏è –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞."
        ;;
esac
